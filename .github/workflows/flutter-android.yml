name: Android Release

on:
  push:
    branches:
      - 'v0.0.*'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Flutter (specify an exact version compatible with emotion_tracker)
      - name: Set up Flutter
        uses: subosito/flutter-action@v2

      # Switch to beta channel (if necessary for your app)
      - name: Switching to beta
        run: |
          flutter channel beta

      # Reflect changes (flutter create . is used to reflect channel switch)
      - name: Reflecting beta changes
        run: |
          flutter create .

      # Install dependencies
      - name: Install dependencies
        run: |
          flutter pub get

      - name: Decode keystore with padding fix
        run: |
          # Fix padding if needed (pad with "=" to length multiple of 4)
          KEYSIZE=$(echo -n "$ANDROID_KEYSTORE" | wc -c)
          MOD=$(($KEYSIZE % 4))
          if [ $MOD -ne 0 ]; then
            PAD=$((4 - $MOD))
            ANDROID_KEYSTORE="${ANDROID_KEYSTORE}$(printf '%0.s=' $(seq 1 $PAD))"
          fi
          echo "$ANDROID_KEYSTORE" | base64 --decode > /home/runner/keystore.jks
        env:
          ANDROID_KEYSTORE: ${{ secrets.ANDROID_KEYSTORE }}
      
      # Build APK for release
      - name: Build APK for release
        run: flutter build apk --release --no-shrink
        env:
            ANDROID_KEYSTORE: ${{ secrets.ANDROID_KEYSTORE }}
            ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
            ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
            ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}

      # Build AAB for release
      - name: Build AAB for release
        run: flutter build appbundle --release
        env:
            ANDROID_KEYSTORE: ${{ secrets.ANDROID_KEYSTORE }}
            ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
            ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
            ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}

      # Extract the release version from the branch name (e.g., release/v0.0.1 -> v0.0.1)
      - name: Extract release version
        id: extract_version
        run: |
          VERSION=$(echo ${GITHUB_REF} | sed 's/refs\/heads\/release\///')
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      # Create a GitHub Release for the given version
      - name: Create GitHub Release
        run: |
          gh release create $VERSION \
            android/app/build/outputs/flutter-apk/app-release.apk \
            android/app/build/outputs/bundle/release/app-release.aab \
            --title "Release $VERSION" \
            --notes "Release $VERSION for branch $GITHUB_REF" \
            --repo $GITHUB_REPOSITORY
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
